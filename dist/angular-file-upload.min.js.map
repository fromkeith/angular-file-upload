{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 9b1544328919960bb081?0e75","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","name","value","directive","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","concurrentUploadLimit","_classCallCheck","instance","Constructor","TypeError","__identity","fileUploaderOptions","$rootScope","$http","$window","$timeout","File","FormData","options","settings","copy","extend","isUploading","_activeUploads","_nextIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","prototype","addToQueue","files","_this","list","isArrayLikeObject","arrayOfFilters","_getFilters","count","length","addedFileItems","forEach","some","temp","_isValidFile","then","fileItem","push","_onAfterAddingFile","resp","filter","index","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","getIndexOfItem","item","cancel","splice","_destroy","clearQueue","remove","uploadItem","transport","isHTML5","_prepareToUploading","_onBeforeUploadItem","isCancel","cancelItem","_this2","prop","abort","dummy","undefined","onNextTick","_onCancelItem","apply","concat","_onCompleteItem","items","getNotUploadedItems","i","max","upload","cancelAll","isFile","constructor","isFileLikeObject","isNumber","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","_this3","key","object","onAfterAddingAll","fileItems","onBeforeAddingFile","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","response","status","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","notUploaded","uploaded","ratio","current","Math","round","isArray","names","match","$$phase","$apply","size","type","file","_this4","failFilterIndex","Promise","resolve","results","res","reject","all","_isSuccessCode","_transformResponse","headersGetter","_headersGetter","defaults","transformResponse","transformFn","_parseHeaders","val","parsed","split","line","slice","trim","toLowerCase","parsedHeaders","_xhrTransport","sendable","_this5","xhr","_xhr","XMLHttpRequest","_file","append","onprogress","event","lengthComputable","total","_onProgressItem","onload","getAllResponseHeaders","gist","onerror","_onErrorItem","onabort","ontimeout","open","timeout","setRequestHeader","send","_iframeTransport","_this6","form","element","iframe","Date","now","input","_input","_form","replaceWith","element_","action","target","enctype","encoding","bind","html","contentDocument","body","innerHTML","e","_onSuccessItem","unbind","after","submit","_onBeforeUpload","_onProgress","_onSuccess","_onError","_onCancel","_noLongerUploading","_onComplete","nextItem","isDefined","isObject","inherit","source","create","super_","_angular","$inject","fileOrInput","isInput","isElement","fakePathOrObject","postfix","isString","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","$compile","uploader","isSuccess","isError","_replaceNode","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","extendedOptions","$destroy","change","removeAttr","getOptions","getFilters","isEmptyAfterSelection","attr","onChange","listenForBodyLeave","$scope","callback","cb","$on","enteredSomething","lastLeftTimer","document","classList","add","leftSomething","$emit","dragover","dragleave","onDragLeftBody","_getEntryResults","reader","iterate","readEntries","next","waitFor","f","err","onDrop","transfer","_getTransfer","_preventAndStop","_removeOverClass","waitForExplore","spliceOffset","webkitGetAsEntry","entry","isDirectory","createReader","_i","j","console","log","onDragOver","_haveFiles","types","dropEffect","_addOverClass","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _FileDrop = __webpack_require__(8);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(9);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(10);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(11);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(12);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t}]);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"angularFileUpload\"\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false,\n\t    concurrentUploadLimit: 1\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\tvar isObject = _angular.isObject;\n\tvar isNumber = _angular.isNumber;\n\tvar isDefined = _angular.isDefined;\n\tvar isArray = _angular.isArray;\n\tvar element = _angular.element;\n\tfunction __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem) {\n\t    var File = $window.File;\n\t    var FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _activeUploads: [],\n\t                _nextIndex: 0,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        FileUploader.prototype.addToQueue = function addToQueue(files, options, filters) {\n\t            var _this = this;\n\t\n\t            var list = this.isArrayLikeObject(files) ? files : [files];\n\t            var arrayOfFilters = this._getFilters(filters);\n\t            var count = this.queue.length;\n\t            var addedFileItems = [];\n\t\n\t            forEach(list, function (some /*{File|HTMLInputElement|Object}*/) {\n\t                var temp = new FileLikeObject(some);\n\t\n\t                _this._isValidFile(temp, arrayOfFilters, options).then(function () {\n\t                    var fileItem = new FileItem(_this, some, options);\n\t                    addedFileItems.push(fileItem);\n\t                    _this.queue.push(fileItem);\n\t                    _this._onAfterAddingFile(fileItem);\n\t                }, function (resp) {\n\t                    var filter = arrayOfFilters[resp.index];\n\t                    _this._onWhenAddingFileFailed(temp, filter, options);\n\t                });\n\t            });\n\t\n\t            if (this.queue.length !== count) {\n\t                this._onAfterAddingAll(addedFileItems);\n\t                this.progress = this._getTotalProgress();\n\t            }\n\t\n\t            this._render();\n\t            if (this.autoUpload) this.uploadAll();\n\t        };\n\t        /**\n\t         * Remove items from the queue. Remove last: index = -1\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.removeFromQueue = function removeFromQueue(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            if (item.isUploading) item.cancel();\n\t            this.queue.splice(index, 1);\n\t            item._destroy();\n\t            this.progress = this._getTotalProgress();\n\t        };\n\t        /**\n\t         * Clears the queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.clearQueue = function clearQueue() {\n\t            while (this.queue.length) {\n\t                this.queue[0].remove();\n\t            }\n\t            this.progress = 0;\n\t        };\n\t        /**\n\t         * Uploads a item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadItem = function uploadItem(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t            item._prepareToUploading();\n\t            if (this._activeUploads.length >= this.concurrentUploadLimit) return;\n\t\n\t            this._onBeforeUploadItem(item);\n\t            if (item.isCancel) return;\n\t\n\t            item.isUploading = true;\n\t            this.isUploading = true;\n\t            this._activeUploads.push(item);\n\t            this[transport](item);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Cancels uploading of item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelItem = function cancelItem(value) {\n\t            var _this2 = this;\n\t\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var prop = this.isHTML5 ? '_xhr' : '_form';\n\t            if (!item) return;\n\t            item.isCancel = true;\n\t            if (item.isUploading) {\n\t                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n\t                item[prop].abort();\n\t            } else {\n\t                (function () {\n\t                    var dummy = [undefined, 0, {}];\n\t                    var onNextTick = function onNextTick() {\n\t                        _this2._onCancelItem.apply(_this2, [item].concat(dummy));\n\t                        _this2._onCompleteItem.apply(_this2, [item].concat(dummy));\n\t                    };\n\t                    $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n\t                })();\n\t            }\n\t        };\n\t        /**\n\t         * Uploads all not uploaded items of queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadAll = function uploadAll() {\n\t            var items = this.getNotUploadedItems().filter(function (item) {\n\t                return !item.isUploading;\n\t            });\n\t            if (!items.length) return;\n\t\n\t            forEach(items, function (item) {\n\t                return item._prepareToUploading();\n\t            });\n\t            var i,\n\t                max = this.concurrentUploadLimit - this._activeUploads.length;\n\t            for (i = 0; i < max; i++) {\n\t                items[i].upload();\n\t            }\n\t        };\n\t        /**\n\t         * Cancels all uploads\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelAll = function cancelAll() {\n\t            var items = this.getNotUploadedItems();\n\t            forEach(items, function (item) {\n\t                return item.cancel();\n\t            });\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFile = function isFile(value) {\n\t            return this.constructor.isFile(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFileLikeObject = function isFileLikeObject(value) {\n\t            return this.constructor.isFileLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return this.constructor.isArrayLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns a index of item from the queue\n\t         * @param {Item|Number} value\n\t         * @returns {Number}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getIndexOfItem = function getIndexOfItem(value) {\n\t            return isNumber(value) ? value : this.queue.indexOf(value);\n\t        };\n\t        /**\n\t         * Returns not uploaded items\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getNotUploadedItems = function getNotUploadedItems() {\n\t            return this.queue.filter(function (item) {\n\t                return !item.isUploaded;\n\t            });\n\t        };\n\t        /**\n\t         * Returns items ready for upload\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getReadyItems = function getReadyItems() {\n\t            return this.queue.filter(function (item) {\n\t                return item.isReady && !item.isUploading;\n\t            }).sort(function (item1, item2) {\n\t                return item1.index - item2.index;\n\t            });\n\t        };\n\t        /**\n\t         * Destroys instance of FileUploader\n\t         */\n\t\n\t\n\t        FileUploader.prototype.destroy = function destroy() {\n\t            var _this3 = this;\n\t\n\t            forEach(this._directives, function (key) {\n\t                forEach(_this3._directives[key], function (object) {\n\t                    object.destroy();\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * Callback\n\t         * @param {Array} fileItems\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingAll = function onAfterAddingAll(fileItems) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onBeforeAddingFile = function onBeforeAddingFile(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingFile = function onAfterAddingFile(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onWhenAddingFileFailed = function onWhenAddingFileFailed(item, filter, options) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onBeforeUploadItem = function onBeforeUploadItem(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressItem = function onProgressItem(fileItem, progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressAll = function onProgressAll(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onSuccessItem = function onSuccessItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onErrorItem = function onErrorItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCancelItem = function onCancelItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteItem = function onCompleteItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteAll = function onCompleteAll() {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Returns the total progress\n\t         * @param {Number} [value]\n\t         * @returns {Number}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getTotalProgress = function _getTotalProgress() {\n\t            var value = 0;\n\t            var i;\n\t            for (i = 0; i < this._activeUploads.length; i++) {\n\t                value += this._activeUploads[i].progress;\n\t            }\n\t            if (this.removeAfterUpload) return value / this._activeUploads.length || 0;\n\t\n\t            var notUploaded = this.getNotUploadedItems().length;\n\t            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t            var ratio = 100 / this.queue.length;\n\t            var current = (value || 0) * ratio / 100;\n\t\n\t            return Math.round(uploaded * ratio + current);\n\t        };\n\t        /**\n\t         * Returns array of filters\n\t         * @param {Array<Function>|String} filters\n\t         * @returns {Array<Function>}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getFilters = function _getFilters(filters) {\n\t            if (!filters) return this.filters;\n\t            if (isArray(filters)) return filters;\n\t            var names = filters.match(/[^\\s,]+/g);\n\t            return this.filters.filter(function (filter) {\n\t                return names.indexOf(filter.name) !== -1;\n\t            });\n\t        };\n\t        /**\n\t         * Updates html\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._render = function _render() {\n\t            if (!$rootScope.$$phase) $rootScope.$apply();\n\t        };\n\t        /**\n\t         * Returns \"true\" if item is a file (not folder)\n\t         * @param {File|FileLikeObject} item\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._folderFilter = function _folderFilter(item) {\n\t            return !!(item.size || item.type);\n\t        };\n\t        /**\n\t         * Returns \"true\" if the limit has not been reached\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._queueLimitFilter = function _queueLimitFilter() {\n\t            return this.queue.length < this.queueLimit;\n\t        };\n\t        /**\n\t         * Returns \"true\" if file pass all filters\n\t         * @param {File|Object} file\n\t         * @param {Array<Function>} filters\n\t         * @param {Object} options\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isValidFile = function _isValidFile(file, filters, options) {\n\t            var _this4 = this;\n\t\n\t            var failFilterIndex = -1;\n\t            if (!filters.length) {\n\t                return Promise.resolve();\n\t            }\n\t            var results = [];\n\t            filters.forEach(function (filter, index) {\n\t                if (failFilterIndex !== -1) {\n\t                    return;\n\t                }\n\t                var res = filter.fn.call(_this4, file, options);\n\t                if (res) {\n\t                    if (res.catch) {\n\t                        res.catch(function () {\n\t                            failFilterIndex = index;\n\t                        });\n\t                    }\n\t                    results.push(res);\n\t                } else {\n\t                    failFilterIndex = index;\n\t                    results.push(Promise.reject());\n\t                }\n\t            });\n\t            return Promise.all(results).catch(function (resp) {\n\t                return Promise.reject({\n\t                    index: failFilterIndex,\n\t                    resp: resp\n\t                });\n\t            });;\n\t        };\n\t        /**\n\t         * Checks whether upload successful\n\t         * @param {Number} status\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isSuccessCode = function _isSuccessCode(status) {\n\t            return status >= 200 && status < 300 || status === 304;\n\t        };\n\t        /**\n\t         * Transforms the server response\n\t         * @param {*} response\n\t         * @param {Object} headers\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._transformResponse = function _transformResponse(response, headers) {\n\t            var headersGetter = this._headersGetter(headers);\n\t            forEach($http.defaults.transformResponse, function (transformFn) {\n\t                response = transformFn(response, headersGetter);\n\t            });\n\t            return response;\n\t        };\n\t        /**\n\t         * Parsed response headers\n\t         * @param headers\n\t         * @returns {Object}\n\t         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._parseHeaders = function _parseHeaders(headers) {\n\t            var parsed = {},\n\t                key,\n\t                val,\n\t                i;\n\t\n\t            if (!headers) return parsed;\n\t\n\t            forEach(headers.split('\\n'), function (line) {\n\t                i = line.indexOf(':');\n\t                key = line.slice(0, i).trim().toLowerCase();\n\t                val = line.slice(i + 1).trim();\n\t\n\t                if (key) {\n\t                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                }\n\t            });\n\t\n\t            return parsed;\n\t        };\n\t        /**\n\t         * Returns function that returns headers\n\t         * @param {Object} parsedHeaders\n\t         * @returns {Function}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._headersGetter = function _headersGetter(parsedHeaders) {\n\t            return function (name) {\n\t                if (name) {\n\t                    return parsedHeaders[name.toLowerCase()] || null;\n\t                }\n\t                return parsedHeaders;\n\t            };\n\t        };\n\t        /**\n\t         * The XMLHttpRequest transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._xhrTransport = function _xhrTransport(item) {\n\t            var _this5 = this;\n\t\n\t            var xhr = item._xhr = new XMLHttpRequest();\n\t            var sendable;\n\t\n\t            if (!item.disableMultipart) {\n\t                sendable = new FormData();\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        sendable.append(key, value);\n\t                    });\n\t                });\n\t\n\t                sendable.append(item.alias, item._file, item.file.name);\n\t            } else {\n\t                sendable = item._file;\n\t            }\n\t\n\t            if (typeof item._file.size != 'number') {\n\t                throw new TypeError('The file specified is no longer valid');\n\t            }\n\t\n\t            xhr.upload.onprogress = function (event) {\n\t                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                _this5._onProgressItem(item, progress);\n\t            };\n\t\n\t            xhr.onload = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                var gist = _this5._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                var method = '_on' + gist + 'Item';\n\t                _this5[method](item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onerror = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onErrorItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onabort = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onCancelItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.ontimeout = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onErrorItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.open(item.method, item.url, true);\n\t\n\t            if (item.timeout) {\n\t                xhr.timeout = item.timeout;\n\t            }\n\t\n\t            xhr.withCredentials = item.withCredentials;\n\t\n\t            forEach(item.headers, function (value, name) {\n\t                xhr.setRequestHeader(name, value);\n\t            });\n\t\n\t            xhr.send(sendable);\n\t        };\n\t        /**\n\t         * The IFrame transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._iframeTransport = function _iframeTransport(item) {\n\t            var _this6 = this;\n\t\n\t            var form = element('<form style=\"display: none;\" />');\n\t            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t            var input = item._input;\n\t\n\t            if (item._form) item._form.replaceWith(input); // remove old form\n\t            item._form = form; // save link to new form\n\t\n\t            input.prop('name', item.alias);\n\t\n\t            forEach(item.formData, function (obj) {\n\t                forEach(obj, function (value, key) {\n\t                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                    element_.val(value);\n\t                    form.append(element_);\n\t                });\n\t            });\n\t\n\t            form.prop({\n\t                action: item.url,\n\t                method: 'POST',\n\t                target: iframe.prop('name'),\n\t                enctype: 'multipart/form-data',\n\t                encoding: 'multipart/form-data' // old IE\n\t            });\n\t\n\t            iframe.bind('load', function () {\n\t                var html = '';\n\t                var status = 200;\n\t\n\t                try {\n\t                    // Fix for legacy IE browsers that loads internal error page\n\t                    // when failed WS response received. In consequence iframe\n\t                    // content access denied error is thrown becouse trying to\n\t                    // access cross domain page. When such thing occurs notifying\n\t                    // with empty response object. See more info at:\n\t                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                    // Note that if non standard 4xx or 5xx error code returned\n\t                    // from WS then response content can be accessed without error\n\t                    // but 'XHR' status becomes 200. In order to avoid confusion\n\t                    // returning response via same 'success' event handler.\n\t\n\t                    // fixed angular.contents() for iframes\n\t                    html = iframe[0].contentDocument.body.innerHTML;\n\t                } catch (e) {\n\t                    // in case we run into the access-is-denied error or we have another error on the server side\n\t                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                    status = 500;\n\t                }\n\t\n\t                var xhr = { response: html, status: status, dummy: true };\n\t                var headers = {};\n\t                var response = _this6._transformResponse(xhr.response, headers);\n\t\n\t                _this6._onSuccessItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            });\n\t\n\t            form.abort = function () {\n\t                var xhr = { status: 0, dummy: true };\n\t                var headers = {};\n\t                var response;\n\t\n\t                iframe.unbind('load').prop('src', 'javascript:false;');\n\t                form.replaceWith(input);\n\t\n\t                _this6._onCancelItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            input.after(form);\n\t            form.append(input).append(iframe);\n\t\n\t            form[0].submit();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onWhenAddingFileFailed = function _onWhenAddingFileFailed(item, filter, options) {\n\t            this.onWhenAddingFileFailed(item, filter, options);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingFile = function _onAfterAddingFile(item) {\n\t            this.onAfterAddingFile(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Array<FileItem>} items\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingAll = function _onAfterAddingAll(items) {\n\t            this.onAfterAddingAll(items);\n\t        };\n\t        /**\n\t         *  Inner callback\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onBeforeUploadItem = function _onBeforeUploadItem(item) {\n\t            item._onBeforeUpload();\n\t            this.onBeforeUploadItem(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onProgressItem = function _onProgressItem(item, progress) {\n\t            var total = this._getTotalProgress(progress);\n\t            this.progress = total;\n\t            item._onProgress(progress);\n\t            this.onProgressItem(item, progress);\n\t            this.onProgressAll(total);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onSuccessItem = function _onSuccessItem(item, response, status, headers) {\n\t            item._onSuccess(response, status, headers);\n\t            this.onSuccessItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onErrorItem = function _onErrorItem(item, response, status, headers) {\n\t            item._onError(response, status, headers);\n\t            this.onErrorItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCancelItem = function _onCancelItem(item, response, status, headers) {\n\t            item._onCancel(response, status, headers);\n\t            this.onCancelItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCompleteItem = function _onCompleteItem(item, response, status, headers) {\n\t            this._noLongerUploading(item);\n\t            item._onComplete(response, status, headers);\n\t            this.onCompleteItem(item, response, status, headers);\n\t\n\t            var nextItem = this.getReadyItems()[0];\n\t            this.isUploading = this._activeUploads.length > 0;\n\t\n\t            if (isDefined(nextItem)) {\n\t                nextItem.upload();\n\t                return;\n\t            }\n\t\n\t            this.onCompleteAll();\n\t            this.progress = this._getTotalProgress();\n\t            this._render();\n\t        };\n\t        /**\n\t            Inner helper\n\t        */\n\t\n\t\n\t        FileUploader.prototype._noLongerUploading = function _noLongerUploading(item) {\n\t            var i;\n\t            for (i = 0; i < this._activeUploads.length; i++) {\n\t                if (this._activeUploads[i] === item) {\n\t                    this._activeUploads.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        /**********************\n\t         * STATIC\n\t         **********************/\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFile = function isFile(value) {\n\t            return File && value instanceof File;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFileLikeObject = function isFileLikeObject(value) {\n\t            return value instanceof FileLikeObject;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return isObject(value) && 'length' in value;\n\t        };\n\t        /**\n\t         * Inherits a target (Class_1) by a source (Class_2)\n\t         * @param {Function} target\n\t         * @param {Function} source\n\t         */\n\t\n\t\n\t        FileUploader.inherit = function inherit(target, source) {\n\t            target.prototype = Object.create(source.prototype);\n\t            target.prototype.constructor = target;\n\t            target.super_ = source;\n\t        };\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t}\n\t\n\t__identity.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', '$timeout', 'FileLikeObject', 'FileItem'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar isElement = _angular.isElement;\n\tvar isString = _angular.isString;\n\tfunction __identity() {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\n\t         * Creates file like object from fake path string\n\t         * @param {String} path\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromFakePath = function _createFromFakePath(path) {\n\t            this.lastModifiedDate = null;\n\t            this.size = null;\n\t            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t        };\n\t        /**\n\t         * Creates file like object from object\n\t         * @param {File|FileLikeObject} object\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromObject = function _createFromObject(object) {\n\t            this.lastModifiedDate = copy(object.lastModifiedDate);\n\t            this.size = object.size;\n\t            this.type = object.type;\n\t            this.name = object.name;\n\t        };\n\t\n\t        return FileLikeObject;\n\t    }();\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar element = _angular.element;\n\tvar isElement = _angular.isElement;\n\tfunction __identity($compile, FileLikeObject) {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.upload = function upload() {\n\t            try {\n\t                this.uploader.uploadItem(this);\n\t            } catch (e) {\n\t                this.uploader._onCompleteItem(this, '', 0, []);\n\t                this.uploader._onErrorItem(this, '', 0, []);\n\t            }\n\t        };\n\t        /**\n\t         * Cancels uploading of FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.cancel = function cancel() {\n\t            this.uploader.cancelItem(this);\n\t        };\n\t        /**\n\t         * Removes a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.remove = function remove() {\n\t            this.uploader.removeFromQueue(this);\n\t        };\n\t        /**\n\t         * Callback\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onBeforeUpload = function onBeforeUpload() {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onProgress = function onProgress(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onSuccess = function onSuccess(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onError = function onError(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onCancel = function onCancel(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onComplete = function onComplete(response, status, headers) {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Inner callback\n\t         */\n\t\n\t\n\t        FileItem.prototype._onBeforeUpload = function _onBeforeUpload() {\n\t            this.isReady = true;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.onBeforeUpload();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onProgress = function _onProgress(progress) {\n\t            this.progress = progress;\n\t            this.onProgress(progress);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onSuccess = function _onSuccess(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = true;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 100;\n\t            this.index = null;\n\t            this.onSuccess(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onError = function _onError(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = true;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onError(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onCancel = function _onCancel(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = true;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onCancel(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onComplete = function _onComplete(response, status, headers) {\n\t            this.onComplete(response, status, headers);\n\t            if (this.removeAfterUpload) this.remove();\n\t        };\n\t        /**\n\t         * Destroys a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype._destroy = function _destroy() {\n\t            if (this._input) this._input.remove();\n\t            if (this._form) this._form.remove();\n\t            delete this._form;\n\t            delete this._input;\n\t        };\n\t        /**\n\t         * Prepares to uploading\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._prepareToUploading = function _prepareToUploading() {\n\t            this.index = this.index || ++this.uploader._nextIndex;\n\t            this.isReady = true;\n\t        };\n\t        /**\n\t         * Replaces input element on his clone\n\t         * @param {JQLite|jQuery} input\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._replaceNode = function _replaceNode(input) {\n\t            var clone = $compile(input.clone())(input.scope());\n\t            clone.prop('value', null); // FF fix\n\t            input.css('display', 'none');\n\t            input.after(clone); // remove jquery dependency\n\t        };\n\t\n\t        return FileItem;\n\t    }();\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity() {\n\t    var FileDirective = function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\n\t         * Binds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.bind = function bind() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this.element.bind(key, this[prop]);\n\t            }\n\t        };\n\t        /**\n\t         * Unbinds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.unbind = function unbind() {\n\t            for (var key in this.events) {\n\t                this.element.unbind(key, this.events[key]);\n\t            }\n\t        };\n\t        /**\n\t         * Destroys directive\n\t         */\n\t\n\t\n\t        FileDirective.prototype.destroy = function destroy() {\n\t            var index = this.uploader._directives[this.prop].indexOf(this);\n\t            this.uploader._directives[this.prop].splice(index, 1);\n\t            this.unbind();\n\t            // this.element = null;\n\t        };\n\t        /**\n\t         * Saves links to functions\n\t         * @private\n\t         */\n\t\n\t\n\t        FileDirective.prototype._saveLinks = function _saveLinks() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this[prop] = this[prop].bind(this);\n\t            }\n\t        };\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity($compile, FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * If returns \"true\" then HTMLInputElement will be cleared\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.isEmptyAfterSelection = function isEmptyAfterSelection() {\n\t            return !!this.element.attr('multiple');\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileSelect.prototype.onChange = function onChange() {\n\t            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t\n\t            if (!this.uploader.isHTML5) this.destroy();\n\t            this.uploader.addToQueue(files, options, filters);\n\t            if (this.isEmptyAfterSelection()) {\n\t                this.element.prop('value', null);\n\t                this.element.replaceWith($compile(this.element.clone())(this.scope));\n\t            }\n\t        };\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileDirective'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\tfunction __identity(FileDirective, $rootScope, $timeout) {\n\t\n\t    function listenForBodyLeave($scope, callback) {\n\t        var cb = $rootScope.$on('angularFileUpload.body.leave', callback);\n\t        $scope.$on('$destroy', cb);\n\t    }\n\t    var lastLeftTimer = void 0;\n\t    function enteredSomething(e) {\n\t        if (lastLeftTimer) {\n\t            $timeout.cancel(lastLeftTimer);\n\t            lastLeftTimer = null;\n\t        }\n\t        document.body.classList.add('nv-body-file-over');\n\t    }\n\t    function leftSomething(e) {\n\t        if (lastLeftTimer) {\n\t            $timeout.cancel(lastLeftTimer);\n\t        }\n\t        lastLeftTimer = $timeout(function () {\n\t            $rootScope.$emit('angularFileUpload.body.leave', e);\n\t            document.body.classList.remove('nv-body-file-over');\n\t            lastLeftTimer = null;\n\t        }, 100);\n\t    }\n\t    angular.element(document.body).bind('dragleave', function (e) {\n\t        leftSomething(e);\n\t    });\n\t    angular.element(document.body).bind('dragover', function (e) {\n\t        enteredSomething(e);\n\t    });\n\t    angular.element(document.body).bind('drop', function (e) {\n\t        leftSomething(e);\n\t    });\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t\n\t            listenForBodyLeave(options.scope, function () {\n\t                _this.onDragLeftBody();\n\t            });\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getFilters = function getFilters() {};\n\t        /** get all directory entries from a reader */\n\t\n\t\n\t        FileDrop.prototype._getEntryResults = function _getEntryResults(reader) {\n\t            var files = [];\n\t            function iterate(resolve, reject) {\n\t                reader.readEntries(function (results) {\n\t                    if (!results.length) {\n\t                        resolve(files);\n\t                        return;\n\t                    }\n\t                    var waitFor = results.length;\n\t                    function next() {\n\t                        waitFor--;\n\t                        if (waitFor === 0) {\n\t                            iterate(resolve, reject);\n\t                        }\n\t                    }\n\t                    results.forEach(function (item) {\n\t                        if (!item.isFile) {\n\t                            next();\n\t                            return;\n\t                        }\n\t                        item.file(function (f) {\n\t                            files.push(f);\n\t                            next();\n\t                        }, function () {\n\t                            // skip\n\t                            next();\n\t                        });\n\t                    });\n\t                }, function (err) {\n\t                    reject(err);\n\t                });\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                iterate(resolve, reject);\n\t            });\n\t        };\n\t\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDrop = function onDrop(event) {\n\t            var _this2 = this;\n\t\n\t            var transfer = this._getTransfer(event);\n\t            if (!transfer) return;\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            if (transfer.items) {\n\t                (function () {\n\t                    var waitForExplore = [],\n\t                        spliceOffset = 0,\n\t                        files = [];\n\t                    for (var i = 0; i < transfer.items.length; i++) {\n\t                        if (!transfer.items[i].webkitGetAsEntry) {\n\t                            files.push(transfer.files[i]);\n\t                            continue;\n\t                        }\n\t                        var entry = transfer.items[i].webkitGetAsEntry();\n\t                        if (entry === null) {\n\t                            files.push(transfer.files[i]);\n\t                            continue;\n\t                        }\n\t                        if (!entry.isDirectory) {\n\t                            files.push(transfer.files[i]);\n\t                            continue;\n\t                        }\n\t                        spliceOffset++;\n\t                        var reader = entry.createReader();\n\t                        waitForExplore.push(_this2._getEntryResults(reader));\n\t                    }\n\t                    Promise.all(waitForExplore).then(function (results) {\n\t                        for (var _i = 0; _i < results.length; _i++) {\n\t                            for (var j = 0; j < results[_i].length; j++) {\n\t                                files = files.concat(results[_i][j]);\n\t                            }\n\t                        }\n\t                        _this2.uploader.addToQueue(files, options, filters);\n\t                    }, function (err) {\n\t                        console.log('error adding all files from directories', err);\n\t                        _this2.uploader.addToQueue(transfer.files, options, filters);\n\t                    });\n\t                })();\n\t            } else {\n\t                this.uploader.addToQueue(transfer.files, options, filters);\n\t            }\n\t            leftSomething(event);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragOver = function onDragOver(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!this._haveFiles(transfer.types)) return;\n\t            transfer.dropEffect = 'copy';\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._addOverClass, this);\n\t            enteredSomething(event);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragLeave = function onDragLeave(event) {\n\t            if (event.currentTarget === this.element[0]) return;\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            leftSomething(event);\n\t        };\n\t\n\t        FileDrop.prototype.onDragLeftBody = function onDragLeftBody(event) {\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._getTransfer = function _getTransfer(event) {\n\t            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._preventAndStop = function _preventAndStop(event) {\n\t            event.preventDefault();\n\t            event.stopPropagation();\n\t        };\n\t        /**\n\t         * Returns \"true\" if types contains files\n\t         * @param {Object} types\n\t         */\n\t\n\t\n\t        FileDrop.prototype._haveFiles = function _haveFiles(types) {\n\t            if (!types) return false;\n\t            if (types.indexOf) {\n\t                return types.indexOf('Files') !== -1;\n\t            } else if (types.contains) {\n\t                return types.contains('Files');\n\t            } else {\n\t                return false;\n\t            }\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._addOverClass = function _addOverClass(item) {\n\t            item.addOverClass();\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._removeOverClass = function _removeOverClass(item) {\n\t            item.removeOverClass();\n\t        };\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective', '$rootScope', '$timeout'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Adds over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.addOverClass = function addOverClass() {\n\t            this.element.addClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Removes over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.removeOverClass = function removeOverClass() {\n\t            this.element.removeClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Returns over class\n\t         * @returns {String}\n\t         */\n\t\n\t\n\t        FileOver.prototype.getOverClass = function getOverClass() {\n\t            return this.overClass;\n\t        };\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element,\n\t                scope: scope\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element,\n\t                scope: scope\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity(FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['FileUploader', 'FileOver'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-file-upload.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9b1544328919960bb081\n **/","'use strict';\n\n\nimport CONFIG from './config.json';\n\n\nimport options from './values/options'\n\n\nimport serviceFileUploader from './services/FileUploader';\nimport serviceFileLikeObject from './services/FileLikeObject';\nimport serviceFileItem from './services/FileItem';\nimport serviceFileDirective from './services/FileDirective';\nimport serviceFileSelect from './services/FileSelect';\nimport serviceFileDrop from './services/FileDrop';\nimport serviceFileOver from './services/FileOver';\n\n\nimport directiveFileSelect from './directives/FileSelect';\nimport directiveFileDrop from './directives/FileDrop';\nimport directiveFileOver from './directives/FileOver';\n\n\nangular\n    .module(CONFIG.name, [])\n    .value('fileUploaderOptions', options)\n    .factory('FileUploader', serviceFileUploader)\n    .factory('FileLikeObject', serviceFileLikeObject)\n    .factory('FileItem', serviceFileItem)\n    .factory('FileDirective', serviceFileDirective)\n    .factory('FileSelect', serviceFileSelect)\n    .factory('FileDrop', serviceFileDrop)\n    .factory('FileOver', serviceFileOver)\n    .directive('nvFileSelect', directiveFileSelect)\n    .directive('nvFileDrop', directiveFileDrop)\n    .directive('nvFileOver', directiveFileOver)\n    .run([\n        'FileUploader',\n        'FileLikeObject',\n        'FileItem',\n        'FileDirective',\n        'FileSelect',\n        'FileDrop',\n        'FileOver',\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n            // only for compatibility\n            FileUploader.FileLikeObject = FileLikeObject;\n            FileUploader.FileItem = FileItem;\n            FileUploader.FileDirective = FileDirective;\n            FileUploader.FileSelect = FileSelect;\n            FileUploader.FileDrop = FileDrop;\n            FileUploader.FileOver = FileOver;\n        }\n    ]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = {\n\t\"name\": \"angularFileUpload\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.json\n ** module id = 1\n ** module chunks = 0 1\n **/","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false,\n    concurrentUploadLimit: 1,\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/values/options.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    element\n    } = angular;\n\n\nexport default function __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem) {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _activeUploads: [],\n                _nextIndex: 0,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            var list = this.isArrayLikeObject(files) ? files: [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            forEach(list, (some /*{File|HTMLInputElement|Object}*/) => {\n                var temp = new FileLikeObject(some);\n\n                this._isValidFile(temp, arrayOfFilters, options)\n                    .then(() => {\n                        var fileItem = new FileItem(this, some, options);\n                        addedFileItems.push(fileItem);\n                        this.queue.push(fileItem);\n                        this._onAfterAddingFile(fileItem);\n                    }, (resp) => {\n                        var filter = arrayOfFilters[resp.index];\n                        this._onWhenAddingFileFailed(temp, filter, options);\n                    });\n            });\n\n            if(this.queue.length !== count) {\n                this._onAfterAddingAll(addedFileItems);\n                this.progress = this._getTotalProgress();\n            }\n\n            this._render();\n            if (this.autoUpload) this.uploadAll();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this._activeUploads.length >= this.concurrentUploadLimit) return;\n\n            this._onBeforeUploadItem(item);\n            if (item.isCancel) return;\n\n            item.isUploading = true;\n            this.isUploading = true;\n            this._activeUploads.push(item);\n            this[transport](item);\n            this._render();\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if (!item) return;\n            item.isCancel = true;\n            if(item.isUploading) {\n                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n                item[prop].abort();\n            } else {\n                let dummy = [undefined, 0, {}];\n                let onNextTick = () => {\n                    this._onCancelItem(item, ...dummy);\n                    this._onCompleteItem(item, ...dummy);\n                };\n                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n            }\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            var i, max = this.concurrentUploadLimit - this._activeUploads.length;\n            for (i = 0; i < max; i++) {\n                items[i].upload();\n            }\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress() {\n            var value = 0;\n            var i;\n            for (i = 0; i < this._activeUploads.length; i++) {\n                value += this._activeUploads[i].progress;\n            }\n            if(this.removeAfterUpload) return (value / this._activeUploads.length) || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Returns \"true\" if file pass all filters\n         * @param {File|Object} file\n         * @param {Array<Function>} filters\n         * @param {Object} options\n         * @returns {Boolean}\n         * @private\n         */\n        _isValidFile(file, filters, options) {\n            let failFilterIndex = -1;\n            if (!filters.length) {\n                return Promise.resolve();\n            }\n            let results = [];\n            filters.forEach((filter, index) => {\n                if (failFilterIndex !== -1) {\n                    return;\n                }\n                let res = filter.fn.call(this, file, options);\n                if (res) {\n                    if (res.catch) {\n                        res.catch(() => {\n                            failFilterIndex = index;\n                        });\n                    }\n                    results.push(res);\n                } else {\n                    failFilterIndex = index;\n                    results.push(Promise.reject());\n                }\n            });\n            return Promise.all(results)\n                .catch((resp) => {\n                    return Promise.reject({\n                        index: failFilterIndex,\n                        resp: resp\n                    });\n                });;\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, item._file, item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.ontimeout = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            if (item.timeout) {\n                xhr.timeout = item.timeout;\n            }\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            this._noLongerUploading(item);\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = this._activeUploads.length > 0;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**\n            Inner helper\n        */\n        _noLongerUploading(item) {\n            var i;\n            for (i = 0; i < this._activeUploads.length; i++) {\n                if (this._activeUploads[i] === item) {\n                    this._activeUploads.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\n__identity.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    '$timeout',\n    'FileLikeObject',\n    'FileItem'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileUploader.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default function __identity() {\n    \n    \n    return class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileLikeObject.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default function __identity($compile, FileLikeObject) {\n    \n    \n    return class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                this.uploader._onCompleteItem(this, '', 0, []);\n                this.uploader._onErrorItem(this, '', 0, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileItem.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity() {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDirective.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity($compile, FileDirective) {\n    \n    \n    return class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return !!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith($compile(this.element.clone())(this.scope));\n            }\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileDirective'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default function __identity(FileDirective, $rootScope, $timeout) {\n\n    function listenForBodyLeave($scope, callback) {\n        let cb = $rootScope.$on('angularFileUpload.body.leave', callback);\n        $scope.$on('$destroy', cb);\n    }\n    let lastLeftTimer;\n    function enteredSomething(e) {\n        if (lastLeftTimer) {\n            $timeout.cancel(lastLeftTimer);\n            lastLeftTimer = null;\n        }\n        document.body.classList.add('nv-body-file-over');\n    }\n    function leftSomething(e) {\n        if (lastLeftTimer) {\n            $timeout.cancel(lastLeftTimer);\n        }\n        lastLeftTimer = $timeout(() => {\n            $rootScope.$emit('angularFileUpload.body.leave', e);\n            document.body.classList.remove('nv-body-file-over');\n            lastLeftTimer = null;\n        }, 100);\n    }\n    angular.element(document.body).bind('dragleave', (e) => {\n        leftSomething(e);\n    });\n    angular.element(document.body).bind('dragover', (e) => {\n        enteredSomething(e);\n    });\n    angular.element(document.body).bind('drop', (e) => {\n        leftSomething(e);\n    });\n\n    return class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave',\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            super(extendedOptions);\n            listenForBodyLeave(options.scope, () => {\n                this.onDragLeftBody();\n            });\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /** get all directory entries from a reader */\n        _getEntryResults(reader) {\n            let files = [];\n            function iterate(resolve, reject) {\n                reader.readEntries((results) => {\n                    if (!results.length) {\n                        resolve(files);\n                        return;\n                    }\n                    let waitFor = results.length;\n                    function next() {\n                        waitFor--;\n                        if (waitFor === 0) {\n                            iterate(resolve, reject);\n                        }\n                    }\n                    results.forEach((item) => {\n                        if (!item.isFile) {\n                            next();\n                            return;\n                        }\n                        item.file((f) => {\n                            files.push(f);\n                            next();\n                        }, () => {\n                            // skip\n                            next();\n                        });\n                    });\n                }, function (err) {\n                    reject(err);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                iterate(resolve, reject);\n            });\n        }\n\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            if (transfer.items) {\n                let waitForExplore = [], spliceOffset = 0, files = [];\n                for (let i = 0; i < transfer.items.length; i++) {\n                    if (!transfer.items[i].webkitGetAsEntry) {\n                        files.push(transfer.files[i]);\n                        continue;\n                    }\n                    let entry = transfer.items[i].webkitGetAsEntry();\n                    if (entry === null) {\n                        files.push(transfer.files[i]);\n                        continue;\n                    }\n                    if (!entry.isDirectory) {\n                        files.push(transfer.files[i]);\n                        continue;\n                    }\n                    spliceOffset++;\n                    let reader = entry.createReader();\n                    waitForExplore.push(this._getEntryResults(reader));\n                }\n                Promise.all(waitForExplore)\n                    .then((results) => {\n                        for (let i = 0; i < results.length; i++) {\n                            for (let j = 0; j < results[i].length; j++) {\n                                files = files.concat(results[i][j]);\n                            }\n                        }\n                        this.uploader.addToQueue(files, options, filters);\n                    }, (err) => {\n                        console.log('error adding all files from directories', err);\n                        this.uploader.addToQueue(transfer.files, options, filters);\n                    });\n            } else {\n                this.uploader.addToQueue(transfer.files, options, filters);\n            }\n            leftSomething(event);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n            enteredSomething(event);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            leftSomething(event);\n        }\n        onDragLeftBody(event) {\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective',\n    '$rootScope',\n    '$timeout',\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileOver.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileSelect) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element,\n                scope: scope\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileDrop) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element,\n                scope: scope,\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity(FileUploader, FileOver) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileOver.js\n **/"],"sourceRoot":""}